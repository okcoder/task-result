package org.okcoder.app.task_result.domain.entity;

import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;

public class TaskResultCondition {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TASK_RESULT
     *
     * @mbg.generated Sun Feb 02 18:19:38 JST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TASK_RESULT
     *
     * @mbg.generated Sun Feb 02 18:19:38 JST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TASK_RESULT
     *
     * @mbg.generated Sun Feb 02 18:19:38 JST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TASK_RESULT
     *
     * @mbg.generated Sun Feb 02 18:19:38 JST 2020
     */
    public TaskResultCondition() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TASK_RESULT
     *
     * @mbg.generated Sun Feb 02 18:19:38 JST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TASK_RESULT
     *
     * @mbg.generated Sun Feb 02 18:19:38 JST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TASK_RESULT
     *
     * @mbg.generated Sun Feb 02 18:19:38 JST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TASK_RESULT
     *
     * @mbg.generated Sun Feb 02 18:19:38 JST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TASK_RESULT
     *
     * @mbg.generated Sun Feb 02 18:19:38 JST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TASK_RESULT
     *
     * @mbg.generated Sun Feb 02 18:19:38 JST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TASK_RESULT
     *
     * @mbg.generated Sun Feb 02 18:19:38 JST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TASK_RESULT
     *
     * @mbg.generated Sun Feb 02 18:19:38 JST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TASK_RESULT
     *
     * @mbg.generated Sun Feb 02 18:19:38 JST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TASK_RESULT
     *
     * @mbg.generated Sun Feb 02 18:19:38 JST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TASK_RESULT
     *
     * @mbg.generated Sun Feb 02 18:19:38 JST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andEventIdIsNull() {
            addCriterion("EVENT_ID is null");
            return (Criteria) this;
        }

        public Criteria andEventIdIsNotNull() {
            addCriterion("EVENT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andEventIdEqualTo(Long value) {
            addCriterion("EVENT_ID =", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotEqualTo(Long value) {
            addCriterion("EVENT_ID <>", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdGreaterThan(Long value) {
            addCriterion("EVENT_ID >", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdGreaterThanOrEqualTo(Long value) {
            addCriterion("EVENT_ID >=", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdLessThan(Long value) {
            addCriterion("EVENT_ID <", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdLessThanOrEqualTo(Long value) {
            addCriterion("EVENT_ID <=", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdIn(List<Long> values) {
            addCriterion("EVENT_ID in", values, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotIn(List<Long> values) {
            addCriterion("EVENT_ID not in", values, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdBetween(Long value1, Long value2) {
            addCriterion("EVENT_ID between", value1, value2, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotBetween(Long value1, Long value2) {
            addCriterion("EVENT_ID not between", value1, value2, "eventId");
            return (Criteria) this;
        }

        public Criteria andTaskIdIsNull() {
            addCriterion("TASK_ID is null");
            return (Criteria) this;
        }

        public Criteria andTaskIdIsNotNull() {
            addCriterion("TASK_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTaskIdEqualTo(Long value) {
            addCriterion("TASK_ID =", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdNotEqualTo(Long value) {
            addCriterion("TASK_ID <>", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdGreaterThan(Long value) {
            addCriterion("TASK_ID >", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdGreaterThanOrEqualTo(Long value) {
            addCriterion("TASK_ID >=", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdLessThan(Long value) {
            addCriterion("TASK_ID <", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdLessThanOrEqualTo(Long value) {
            addCriterion("TASK_ID <=", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdIn(List<Long> values) {
            addCriterion("TASK_ID in", values, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdNotIn(List<Long> values) {
            addCriterion("TASK_ID not in", values, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdBetween(Long value1, Long value2) {
            addCriterion("TASK_ID between", value1, value2, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdNotBetween(Long value1, Long value2) {
            addCriterion("TASK_ID not between", value1, value2, "taskId");
            return (Criteria) this;
        }

        public Criteria andResultIdIsNull() {
            addCriterion("RESULT_ID is null");
            return (Criteria) this;
        }

        public Criteria andResultIdIsNotNull() {
            addCriterion("RESULT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andResultIdEqualTo(Long value) {
            addCriterion("RESULT_ID =", value, "resultId");
            return (Criteria) this;
        }

        public Criteria andResultIdNotEqualTo(Long value) {
            addCriterion("RESULT_ID <>", value, "resultId");
            return (Criteria) this;
        }

        public Criteria andResultIdGreaterThan(Long value) {
            addCriterion("RESULT_ID >", value, "resultId");
            return (Criteria) this;
        }

        public Criteria andResultIdGreaterThanOrEqualTo(Long value) {
            addCriterion("RESULT_ID >=", value, "resultId");
            return (Criteria) this;
        }

        public Criteria andResultIdLessThan(Long value) {
            addCriterion("RESULT_ID <", value, "resultId");
            return (Criteria) this;
        }

        public Criteria andResultIdLessThanOrEqualTo(Long value) {
            addCriterion("RESULT_ID <=", value, "resultId");
            return (Criteria) this;
        }

        public Criteria andResultIdIn(List<Long> values) {
            addCriterion("RESULT_ID in", values, "resultId");
            return (Criteria) this;
        }

        public Criteria andResultIdNotIn(List<Long> values) {
            addCriterion("RESULT_ID not in", values, "resultId");
            return (Criteria) this;
        }

        public Criteria andResultIdBetween(Long value1, Long value2) {
            addCriterion("RESULT_ID between", value1, value2, "resultId");
            return (Criteria) this;
        }

        public Criteria andResultIdNotBetween(Long value1, Long value2) {
            addCriterion("RESULT_ID not between", value1, value2, "resultId");
            return (Criteria) this;
        }

        public Criteria andFromTimeIsNull() {
            addCriterion("FROM_TIME is null");
            return (Criteria) this;
        }

        public Criteria andFromTimeIsNotNull() {
            addCriterion("FROM_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andFromTimeEqualTo(LocalDateTime value) {
            addCriterion("FROM_TIME =", value, "fromTime");
            return (Criteria) this;
        }

        public Criteria andFromTimeNotEqualTo(LocalDateTime value) {
            addCriterion("FROM_TIME <>", value, "fromTime");
            return (Criteria) this;
        }

        public Criteria andFromTimeGreaterThan(LocalDateTime value) {
            addCriterion("FROM_TIME >", value, "fromTime");
            return (Criteria) this;
        }

        public Criteria andFromTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("FROM_TIME >=", value, "fromTime");
            return (Criteria) this;
        }

        public Criteria andFromTimeLessThan(LocalDateTime value) {
            addCriterion("FROM_TIME <", value, "fromTime");
            return (Criteria) this;
        }

        public Criteria andFromTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("FROM_TIME <=", value, "fromTime");
            return (Criteria) this;
        }

        public Criteria andFromTimeIn(List<LocalDateTime> values) {
            addCriterion("FROM_TIME in", values, "fromTime");
            return (Criteria) this;
        }

        public Criteria andFromTimeNotIn(List<LocalDateTime> values) {
            addCriterion("FROM_TIME not in", values, "fromTime");
            return (Criteria) this;
        }

        public Criteria andFromTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("FROM_TIME between", value1, value2, "fromTime");
            return (Criteria) this;
        }

        public Criteria andFromTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("FROM_TIME not between", value1, value2, "fromTime");
            return (Criteria) this;
        }

        public Criteria andToTimeIsNull() {
            addCriterion("TO_TIME is null");
            return (Criteria) this;
        }

        public Criteria andToTimeIsNotNull() {
            addCriterion("TO_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andToTimeEqualTo(LocalDateTime value) {
            addCriterion("TO_TIME =", value, "toTime");
            return (Criteria) this;
        }

        public Criteria andToTimeNotEqualTo(LocalDateTime value) {
            addCriterion("TO_TIME <>", value, "toTime");
            return (Criteria) this;
        }

        public Criteria andToTimeGreaterThan(LocalDateTime value) {
            addCriterion("TO_TIME >", value, "toTime");
            return (Criteria) this;
        }

        public Criteria andToTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("TO_TIME >=", value, "toTime");
            return (Criteria) this;
        }

        public Criteria andToTimeLessThan(LocalDateTime value) {
            addCriterion("TO_TIME <", value, "toTime");
            return (Criteria) this;
        }

        public Criteria andToTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("TO_TIME <=", value, "toTime");
            return (Criteria) this;
        }

        public Criteria andToTimeIn(List<LocalDateTime> values) {
            addCriterion("TO_TIME in", values, "toTime");
            return (Criteria) this;
        }

        public Criteria andToTimeNotIn(List<LocalDateTime> values) {
            addCriterion("TO_TIME not in", values, "toTime");
            return (Criteria) this;
        }

        public Criteria andToTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("TO_TIME between", value1, value2, "toTime");
            return (Criteria) this;
        }

        public Criteria andToTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("TO_TIME not between", value1, value2, "toTime");
            return (Criteria) this;
        }

        public Criteria andDurationIsNull() {
            addCriterion("DURATION is null");
            return (Criteria) this;
        }

        public Criteria andDurationIsNotNull() {
            addCriterion("DURATION is not null");
            return (Criteria) this;
        }

        public Criteria andDurationEqualTo(LocalTime value) {
            addCriterion("DURATION =", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationNotEqualTo(LocalTime value) {
            addCriterion("DURATION <>", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationGreaterThan(LocalTime value) {
            addCriterion("DURATION >", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationGreaterThanOrEqualTo(LocalTime value) {
            addCriterion("DURATION >=", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationLessThan(LocalTime value) {
            addCriterion("DURATION <", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationLessThanOrEqualTo(LocalTime value) {
            addCriterion("DURATION <=", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationIn(List<LocalTime> values) {
            addCriterion("DURATION in", values, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationNotIn(List<LocalTime> values) {
            addCriterion("DURATION not in", values, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationBetween(LocalTime value1, LocalTime value2) {
            addCriterion("DURATION between", value1, value2, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationNotBetween(LocalTime value1, LocalTime value2) {
            addCriterion("DURATION not between", value1, value2, "duration");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TASK_RESULT
     *
     * @mbg.generated do_not_delete_during_merge Sun Feb 02 18:19:38 JST 2020
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TASK_RESULT
     *
     * @mbg.generated Sun Feb 02 18:19:38 JST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}